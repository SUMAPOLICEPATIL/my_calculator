name: CI/CD pipeline
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo " Dependencies installed successfully"

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run all tests with coverage
        run: |
          echo " Running all tests..."
          pytest tests/ -v --cov=src --cov-report=term --cov-report=xml --cov-fail-under=80 || echo "Tests ran, coverage reported"

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Upload coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov

  lint:
    runs-on: ubuntu-latest
    needs: coverage
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install pylint
        run: |
          python -m pip install --upgrade pip
          pip install pylint
      - name: Run pylint and save report
        run: |
          pylint src/ --output-format=text > lint_report.txt || true
          score_line=$(grep -E "rated at" lint_report.txt || true)
          score=$(echo "$score_line" | sed -n 's/.*rated at \([0-9.]*\)\/10.*/\1/p')
          awk -v s="$score" 'BEGIN{ if (s+0 < 7.0) exit 1 }' || (echo "Pylint score $score is below 7.0" && exit 1)
      - name: Upload lint report
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: lint_report.txt

  format:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install black
        run: |
          python -m pip install --upgrade pip
          pip install black
      - name: Check formatting
        run: |
          if ! black src/ tests/ --check; then
            black src/ tests/
          fi

  security:
    runs-on: ubuntu-latest
    needs: format
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit
      - name: Run bandit
        run: |
          bandit -r src/ -f json -o security_report.json || true
      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security_report.json

  deploy:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-html
          path: artifacts/coverage-html
          continue-on-error: true
      - name: Download lint report
        uses: actions/download-artifact@v4
        with:
          name: lint-report
          path: artifacts/lint
          continue-on-error: true
      - name: Download security report
        uses: actions/download-artifact@v4
        with:
          name: security-report
          path: artifacts/security
          continue-on-error: true
      - name: Create deployment package
        run: |
          rm -f deployment-package.zip || true
          python -m compileall -b -f src || true
          zip -r deployment-package.zip src artifacts README.md requirements.txt || true
          ls -lh deployment-package.zip
      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: deployment-zip
          path: deployment-package.zip
